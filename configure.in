# $Id: configure.in,v 1.3 2002/11/07 14:54:26 hatchond Exp $
AC_INIT()

eclipsedir=${libdir}/eclipse

SRC=`pwd`
LISP=""
INITCORE=""
CORENAME="eclipse.core"
COREDIR=${eclipsedir}
ARGS=""
initfile=".eclipse"
usecore="no"
gnome_entry_dir=""
interp=""

# implementation dependant lisp system args : (default is for cmucl) 
with_image="-core"
load_switch="-load"
eval_form="-eval"
save_lisp="save-lisp"

# standard tests
AC_SYS_INTERPRETER
AC_PROG_INSTALL

AC_ARG_WITH(initfile,
[  --with-initfile=FILE    where to find your eclipse startup file],
initfile="$withval")

AC_ARG_WITH(lisp,
[  --with-lisp=DIR or FILE where to find your lisp system],
LISP="$withval",
[AC_PATH_PROG(LISP,lisp)])

AC_ARG_WITH(initcore,
[  --with-initcore=FILE    the name of the core to use when compiling],
if test -n "$withval" -a -r "$withval"
then INITCORE="${with_image} $withval"
fi)

AC_ARG_WITH(corename,
[  --with-corename=FILE    what is the name of the core image to dump],
if test -n "$withval" -a -r "$withval"
then CORENAME="$withval"
fi)

AC_ARG_WITH(coredest,
[  --with-coredest=DIR     what is the destination of the dumped core image],
if test -n "$withval" -a -r "$withval"
then COREDIR="$withval"
fi)

AC_ARG_WITH(gnome_entry_dir,
[  --with-gnome-entry-dir=[PATH]  path to the gnome WM entries directory.],
gnome_entry_dir="$withval"
if test -z "${gnome_entry_dir}"
then gnome_entry_dir=yes
fi,
gnome_entry_dir=yes)

AC_ARG_ENABLE(compile-into-core,
[  --enable-compile-into-core=[yes|no]  compile to core],
if test ! "$enableval" = no 
then usecore=yes
else usecore=no
fi)

#
# user gave a directory for the lisp system
if test -n ${LISP} && test -d $LISP
then LISP=`dirname $LISP/lisp`/lisp
fi

# no lisp system at all !!!
if test ! -x ${LISP}
then
 AC_MSG_WARN([*** Cannot find a lisp system])
 AC_MSG_ERROR([*** Maybe you want to use --with-lisp])
fi

#
# extra check for gnome wm-properties directory.
AC_CACHE_CHECK(checking for gnome wm-properties directory,
clwm_cv_gnome_entry_dir,
for dir in ${gnome_entry_dir} /usr/share/gnome /usr/local/share/gnome
do 
   if test $dir = no
   then break
   elif test -d $dir
     then gnome_entry_dir=$dir/wm-properties; break
     else gnome_entry_dir=no
   fi
done
clwm_cv_gnome_entry_dir=${gnome_entry_dir})
gnome_entry_dir=${clwm_cv_gnome_entry_dir}

# prepare the lisp arguments for the wm loader.
if test ! ${usecore} = no
then
 ARGS="${with_image} ${COREDIR}/${CORENAME}\
       ${eval_form} \"(eclipse:eclipse \${display_spec})\""
else
 ARGS="${INITCORE} ${load_switch} ${SRC}/load-eclipse.lisp ${eval_form}\
 \"(start \${display_spec})\""
fi

# set interp.
if test $interpval = yes
then interp="#!"
else interp=""
fi

#
# Final substitutions
AC_SUBST(interp)   
AC_SUBST(SHELL)
AC_SUBST(LISP)
AC_SUBST(INITCORE)
AC_SUBST(CORENAME)
AC_SUBST(COREDIR)
AC_SUBST(SRC)
AC_SUBST(ARGS)
AC_SUBST(INSTALL)
AC_SUBST(eval_form)
AC_SUBST(with_image)
AC_SUBST(load_switch)
AC_SUBST(save_lisp)
AC_SUBST(usecore)
AC_SUBST(initfile)
AC_SUBST(eclipsedir)
AC_SUBST(gnome_entry_dir)

AC_OUTPUT([Makefile eclipse load-eclipse.lisp config.lisp])

if test ! ${gnome_entry_dir} = no
then 
     printf "creating Eclipse.desktop"
     cat > Eclipse.desktop <<\EOF
[[Desktop Entry]]
Name=Eclipse
Exec=eclipse
TryExec=eclipse
Terminal=false
MultipleArgs=false

[[Window Manager]]
SessionManaged=false
EOF

fi

#
# Configuration report
printf "\n\nConfiguration report\n"
printf " - install prefix            : ${prefix}.\n"
printf " - exec prefix               : ${exec_prefix}/bin.\n"
printf " - eclipse dir               : ${eclipsedir}.\n"
printf " - eclipse startup file      : ${initfile}.\n"
printf " - lisp system found         : ${LISP}.\n"
printf " - use core when compiling   : ${INITCORE}.\n"
printf " - compile and dump image    : ${usecore}.\n"
if test "${usecore}" = yes ; then 
printf " - image path                : ${COREDIR}/${CORENAME}.\n"
fi
printf " - create gnome entry        : ${gnome_entry_dir}.\n"
printf " - installer                 : ${INSTALL}.\n"
